Doel: Bouw een korte intro-animatie waarbij het JanazApp-logo (SVG/PNG) groot in beeld komt op dezelfde hero-achtergrond. Het logo fade-out en de bestaande hero-sectie (“Digitale Overlijdenszorg” + subkop + 2 kaarten + CTA’s) fade-in. De huidige lay-out, inhoud en styling van de hero blijven 1-op-1 behouden.

Belangrijk

Gebruik exact de huidige hero-achtergrond (zelfde afbeelding/gradient/overlay) zodat het lijkt alsof de hero “erachter” staat.

Verander niets aan teksten, copy, lettertypes, kleuren, marges of verhoudingen van de hero. Alleen de animatie/overlay toevoegen.

Responsief & performant: werkt vloeiend op mobile/desktop; geen layout shift.

Toegankelijk: respecteer prefers-reduced-motion → dan geen animaties; toon direct de hero.

Clean exit: na de animatie is de overlay volledig verwijderd (geen tabbable elementen, geen scroll-block).

Technische eisen

Stack: Vanilla HTML/CSS/JS of React (pref. met Framer Motion). Kies er één en lever productieklare code.

Overlay container met:

Full-screen: position: fixed; inset: 0; z-index: 9999;

Achtergrond: dezelfde hero-achtergrond (hergebruik CSS class/asset).

Centraal logo (SVG/PNG) met lichte scale-in (1.0 → 1.06) en fade-in.

Tijdslijn (aanbevolen):

0–300ms: logo fade/scale in (opacity 0→1; scale 1.0→1.06).

300–2000ms: logo statisch in focus.

2000–2400ms: logo fade-out + scale-down (1.06→0.98).

2200–2600ms: hero fade-in + slide-up (opacity 0→1; translateY 12px→0).

2600ms: overlay remove uit DOM.

Reduced motion:

Als window.matchMedia('(prefers-reduced-motion: reduce)').matches === true: skip overlay/animaties, toon direct hero en verwijder overlay node.

Focus/ARIA:

Overlay is decoratief → geen tabbable content, aria-hidden="true".

Na verwijderen overlay blijft focus op <body>/eerste focusbare element in hero.

Implementatie (als je React + Framer Motion kiest)

Bestanden/structuur

components/SplashOverlay.tsx

components/Hero.tsx (bestaand, niet wijzigen in inhoud)

styles/globals.css of module CSS

assets/janazapp-logo.svg

SplashOverlay.tsx (voorbeeldlogica)

Toont overlay met achtergrondclass van hero.

Gebruikt framer-motion voor animaties.

Prop onFinish() om parent te laten weten wanneer overlay klaar is.

Pagina/App integratie

In de hero-pagina: state showSplash, initieel true.

Render <SplashOverlay onFinish={() => setShowSplash(false)} /> conditioneel boven de hero.

Hero krijgt initieel opacity: 0; transform: translateY(12px); en krijgt pas “enter” animatie wanneer showSplash === false.

CSS details

.hero-bg reuse: exact dezelfde achtergrondstijl (afbeelding/gradient/blur/overlay) als de hero container.

.splash-overlay:

position: fixed; inset: 0; z-index: 9999; display: grid; place-items: center;

Achtergrond via .hero-bg.

.logo: max-width: min(36vw, 300px) desktop, min(62vw, 220px) mobile.

No scroll jump: body blijft scrollbaar, overlay is pointer-events: auto (maar bevat niks interactiefs).

Reduced motion

In useEffect, check prefers-reduced-motion; indien true, call direct onFinish().

Implementatie (als je Vanilla kiest)

Voeg overlay HTML direct na <body> open tag toe:

<div id="splash" class="splash-overlay hero-bg" aria-hidden="true">
  <img src="/assets/janazapp-logo.svg" class="splash-logo" alt="" />
</div>


CSS animaties via @keyframes:

logoIn, logoOut, heroIn.

In JS:

Detect prefers-reduced-motion.

Zo niet: voeg/removeklassen met animationend listeners.

Na einde: #splash.remove() en hero krijgt hero--enter class.

Let op: geen layout shift: hero staat er al, maar met opacity:0.

Acceptatiecriteria

Visueel identiek: De hero na animatie is exact zoals huidige mockup (afstanden, fonts, kleuren).

Flow:

Bij load zie ik alleen groot logo op dezelfde achtergrond.

Logo beweegt subtiel (fade/scale-in), pauze, dan fade-out.

Hero verschijnt soepel (fade/slide-in).

Geen flikkering; overlay verdwijnt volledig.

Performance:

60fps op moderne devices; animaties via transform/opacity (GPU-friendly).

Lighthouse: geen CLS toename door overlay.

A11y:

prefers-reduced-motion: reduce → animatie overgeslagen.

Geen focus traps; overlay aria-hidden.

Responsief:

Telefoon: logo schaalt netjes, center; knoppen/kaarten van hero blijven goed klikbaar zonder verschuiving.

Lever op

Werkende implementatie in de huidige codebase (keuze: React + Framer Motion of Vanilla).

Relevante codebestanden + korte README sectie “Intro-animatie” met:

Hoe het werkt

Waar logo/achtergrond staat

Hoe timing aan te passen

Hoe feature uit te schakelen (env flag, bv. VITE_DISABLE_SPLASH=true)

Belangrijk: verander niets aan content/teksten of UX van de hero buiten de gevraagde animatie. Gebruik exact dezelfde achtergrond en stijl als in de huidige hero.